<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:linkend="http://www.w3.org/1999/linkend"
    xmlns:xref="http://www.w3.org/1999/xref"
    xmlns:wadl="http://wadl.dev.java.net/2009/02"
    version="5.0-extension RackBook-2.0" xml:id="identity-v3"
    role="api-reference">
    <title>Identity API v3 (CURRENT)</title>
    <para>
        Gets an authentication token that permits access to the OpenStack
        services REST API.
    </para>
    <para>

        Like most OpenStack projects, OpenStack Identity protects its APIs by
        defining policy rules based on a role-based access control (RBAC)
        approach.
    </para>
    <para>
        The Identity service <link
        xlink:href="http://docs.openstack.org/liberty/config-reference/content/keystone-configuration-file.html"><code>keystone.conf</code></link>
        configuration file sets the name and location of a JSON policy file
        that stores these rules.
    </para>
    <para>
        For information about Identity API protection, see <link
        xlink:href="http://docs.openstack.org/admin-guide-cloud/identity_service_api_protection.html">Identity
        API protection with role-based access control (RBAC)</link> in the
        <citetitle>OpenStack Cloud Administrator Guide</citetitle>.
    </para>
    <section xml:id="versions-identity-v3">
        <title>API versions</title>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#versions">
                <wadl:method href="#getVersions-identity-v3"/>
            </wadl:resource>
            <!-- list version -->
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#version">
                <wadl:method href="#showVersionDetails-identity-v3"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <!-- Tokens -->
    <section xml:id="tokens-v3">
        <title>Tokens</title>
        <para>Manages tokens.</para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <!-- authenticate token -->
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#tokens">
                <wadl:method href="#authenticate"/>
                <wadl:method href="#validateTokens"/>
                <wadl:method href="#checkTokens"/>
                <wadl:method href="#revokeTokens"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <!-- Catalog -->
    <section xml:id="service-catalog-v3">
        <title>Service catalog</title>
        <para>Manages the catalog of services.</para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <!-- create service -->
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#services">
                <wadl:method href="#createService"/>
                <wadl:method href="#listServices"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#service_id">
                <wadl:method href="#getService"/>
                <wadl:method href="#updateService"/>
                <wadl:method href="#deleteService"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <!-- Endpoints -->
    <section xml:id="endpoints-v3">
        <title>Endpoints</title>
        <para>Manages endpoints.</para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <!-- create endpoint -->
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#endpoints"/>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#endpoint_id"/>
        </wadl:resources>
    </section>
    <!-- Domains -->
    <section xml:id="domains-v3">
        <title>Domains</title>
        <para>Manages domains.</para>
        <para>Domains represent collections of users, groups, and projects. Each is owned by exactly
            one domain. Users, however, can be associated with multiple projects by granting roles
            to the user on a project, including projects owned by other domains.</para>
        <para>Each domain defines a namespace where certain API-visible name attributes exist, which
            affects whether those names must be globally unique or unique within that domain. In the
            Identity API, the uniqueness of the following attributes is as follows:</para>
        <itemizedlist>
            <listitem>
                <para><emphasis role="italic">Domain name</emphasis>. Globally unique across all
                    domains.</para>
            </listitem>
            <listitem>
                <para><emphasis role="italic">Role name</emphasis>. Globally unique across all
                    domains.</para>
            </listitem>
            <listitem>
                <para><emphasis role="italic">User name</emphasis>. Unique within the owning
                    domain.</para>
            </listitem>
            <listitem>
                <para><emphasis role="italic">Project name</emphasis>. Unique within the owning
                    domain.</para>
            </listitem>
            <listitem>
                <para><emphasis role="italic">Group name</emphasis>. Unique within the owning
                    domain.</para>
            </listitem>
        </itemizedlist>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <!-- create domain -->
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#domains">
                <wadl:method href="#createDomain"/>
                <wadl:method href="#listDomains"/>
            </wadl:resource>
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#domain_id">
                <wadl:method href="#getDomain"/>
                <wadl:method href="#updateDomain"/>
                <wadl:method href="#deleteDomain"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#users_user_id_roles">
                <wadl:method href="#listDomainUserRoles"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#role_id-domainusers">
                <wadl:method href="#grantDomainUserRole"/>
                <wadl:method href="#checkDomainUserRole"/>
                <wadl:method href="#revokeDomainUserRole"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#groups_group_id_roles">
                <wadl:method href="#listDomainGroupRoles"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#domain-group-role_id">
                <wadl:method href="#grantDomainGroupRole"/>
                <wadl:method href="#checkDomainGroupRole"/>
                <wadl:method href="#revokeDomainGroupRole"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <!-- Projects -->
    <section xml:id="projects-v3">
        <title>Projects</title>
        <para>Manages projects.</para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <!-- create project -->
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#projects">
                <wadl:method href="#createProject"/>
                <wadl:method href="#listProjects"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#project_id">
                <wadl:method href="#getProject"/>
                <wadl:method href="#updateProject"/>
                <wadl:method href="#deleteProject"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#user_id_roles">
                <wadl:method href="#listProjectUserRoles"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#project-user-role_id">
                <wadl:method href="#grantProjectUserRole"/>
                <wadl:method href="#checkProjectUserRole"/>
                <wadl:method href="#revokeProjectUserRole"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#project-groups-roles">
                <wadl:method href="#listProjectGroupRoles"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#project-groups-roles_id">
                <wadl:method href="#grantProjectGroupRole"/>
                <wadl:method href="#checkProjectGroupRole"/>
                <wadl:method href="#revokeProjectGroupRole"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <!-- Users -->
    <section xml:id="users-v3">
        <title>Users</title>
        <para>Manages users.</para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <!-- create user -->
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#create-users">
                <wadl:method href="#createUser"/>
                <wadl:method href="#listUsers"/>
            </wadl:resource>
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#user_id">
                <wadl:method href="#getUser"/>
                <wadl:method href="#updateUser"/>
                <wadl:method href="#deleteUser"/>
            </wadl:resource>
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#groups">
                <wadl:method href="#listUserGroups"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#user-projects">
                <wadl:method href="#listUserProjects"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <!-- Groups -->
    <section xml:id="groups-v3">
        <title>Groups</title>
        <para>Manages groups.</para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <!-- create group -->
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#create-groups">
                <wadl:method href="#createGroup"/>
                <wadl:method href="#listGroups"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#group-group_id">
                <wadl:method href="#getGroup"/>
                <wadl:method href="#updateGroup"/>
                <wadl:method href="#deleteGroup"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#group-users">
                <wadl:method href="#listGroupUsers"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#group-user-user_id">
                <wadl:method href="#assignUserToGroup"/>
                <wadl:method href="#deleteGroupUser"/>
                <wadl:method href="#checkGroupUser"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <!-- Credentials -->
    <section xml:id="credentials-v3">
        <title>Credentials</title>
        <para>Manages credentials.</para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <!-- create credential -->
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#credentials">
                <wadl:method href="#createCredential"/>
                <wadl:method href="#listCredentials"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#credential_id">
                <wadl:method href="#getCredential"/>
                <wadl:method href="#updateCredential"/>
                <wadl:method href="#deleteCredential"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <!-- Roles -->
    <section xml:id="roles-v3">
        <title>Roles</title>
        <para>Manages roles.</para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <!-- create role -->
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#create-roles">
                <wadl:method href="#createRole"/>
                <wadl:method href="#listRoles"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#role_assignments">
                <wadl:method href="#listRoleAssignments"/>
            </wadl:resource>
            <wadl:resource
                href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#role-role_id">
                <wadl:method href="#deleteRole"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <!-- Policies -->
    <section xml:id="policies-v3">
        <title>Policies</title>
        <para>Manages policies.</para>
        <para>
            You can encode policy rule sets into a blob to be consumed by
            remote services. To do so, set <code>type</code> to
            <code>application/json</code> and specify policy rules as JSON strings in a
            <code>blob</code>. For example:
        </para>
        <programlisting>"blob": {
        "default": false
    }</programlisting>
        <para>
            Or:
        </para>
        <programlisting> "blob": {
        "foobar_user": [
            "role:compute-user"
        ]
    }</programlisting>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <!-- create policy -->
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#policies">
                <wadl:method href="#createPolicy"/>
                <wadl:method href="#listPolicies"/>
            </wadl:resource>
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#policy_id">
                <wadl:method href="#getPolicy"/>
                <wadl:method href="#updatePolicy"/>
                <wadl:method href="#deletePolicy"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <section xml:id="regions-v3">
        <title>Regions</title>
        <para>Manages regions.</para>
        <para>
            A region is a general division of an OpenStack deployment.
            You can associate zero or more sub-regions with a region
            to create a tree-like structured hierarchy.
        </para>
        <para>
            Although a region does not have a geographical connotation, a
            deployment can use a geographical name for a region, such as
            <code>us-east</code>.
        </para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <!-- create policy -->
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#regions"/>
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#user_defined_region_id"/>
            <wadl:resource href="../wadls/identity-api/src/v3/wadl/identity-admin-v3.wadl#region_id"/>
        </wadl:resources>
    </section>
</chapter>
