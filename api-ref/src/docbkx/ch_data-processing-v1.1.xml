<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:linkend="http://www.w3.org/1999/linkend"
    xmlns:xref="http://www.w3.org/1999/xref"
    xmlns:wadl="http://wadl.dev.java.net/2009/02"
    version="5.0-extension RackBook-2.0" xml:id="data-processing-v1.1"
    role="api-reference">
    <title>Data Processing API v1.1 (CURRENT)</title>
    <para>Produce data processing operations.</para>
    <section xml:id="v1.1plugins">
        <title>Plugins</title>
        <para>
            A plugin object defines the Hadoop or Spark version that it can
            install and which configurations can be set for the cluster.
        </para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/plugins.wadl#plugins">
                    <wadl:method href="#pluginslist"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/plugins.wadl#pluginSimple">
                    <wadl:method href="#pluginsget"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/plugins.wadl#pluginDetailed">
                    <wadl:method href="#pluginsgetversion"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <section xml:id="v1.1imageregistry">
        <title>Image registry</title>
        <para>
            The image registry is a tool for managing images. Each plugin
            lists required tags for an image. The Data Processing service also
            requires a user name to log in to an instanceâ€™s OS for remote
            operations execution.
        </para>
        <para>
            The image registry enables you to add tags to and remove tags from images
            and define the OS user name.
        </para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/image-registry.wadl#images">
                    <wadl:method href="#imageslist"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/image-registry.wadl#imageId">
                <wadl:method href="#imageInfo"/>
                <wadl:method href="#imageReg"/>
                <wadl:method href="#imageUnreg"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/image-registry.wadl#imageTag">
                <wadl:method href="#addTags"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/image-registry.wadl#imageUntag">
                <wadl:method href="#removeTags"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <section xml:id="v1.1nodegrouptemplate">
        <title>Node group templates</title>
        <para>
            A cluster is a group of nodes with the same configuration. A node
            group template configures a node in the cluster.
        </para>
        <para>
            A template configures Hadoop processes and VM characteristics,
            such as the number of reduced slots for task tracker, the number of
            CPUs, and the amount of RAM. The template specifies the VM
            characteristics through an OpenStack flavor.
        </para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/node-group-template.wadl#node-group-templates">
                <wadl:method href="#node-group-templates-list"/>
                <wadl:method href="#node-group-templates-create"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/node-group-template.wadl#node_group_template_id">
                <wadl:method href="#node-group-templates-get"/>
                <wadl:method href="#node-group-templates-delete"/>
                <wadl:method href="#node-group-templates-update"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <section xml:id="v1.1clustertemplate">
        <title>Cluster templates</title>
        <para>
            A cluster template configures a Hadoop cluster. A cluster template
            lists node groups with the number of instances in each group. You
            can also define cluster-scoped configurations in a cluster
            template.
        </para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/cluster-templates.wadl#cluster-templates">
                <wadl:method href="#cluster-templates-list"/>
                <wadl:method href="#cluster-templates-create"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/cluster-templates.wadl#cluster_template_id">
                <wadl:method href="#cluster-templates-show"/>
                <wadl:method href="#cluster-templates-update"/>
                <wadl:method href="#cluster-templates-delete"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <section xml:id="v1.1clusters">
        <title>Clusters</title>
        <para>
            A cluster is a group of nodes with the same configuration.
        </para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/clusters.wadl#clusters">
                <wadl:method href="#clusters-list"/>
                <wadl:method href="#clusters-create"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/clusters.wadl#multiple-clusters">
                <wadl:method href="#multiple-clusters-create"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/clusters.wadl#cluster_id">
                <wadl:method href="#clusters-get"/>
                <wadl:method href="#clusters-delete"/>
                <wadl:method href="#clusters-scale"/>
                <wadl:method href="#clusters-update"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <section xml:id="v1.1event-log">
        <title>Event log</title>
        <para>
            The event log feature provides information about cluster provisioning.
            In the event of errors, the event log shows the reason for the failure.
        </para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/event-log.wadl#cluster_id">
                <wadl:method href="#show-progress"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <section xml:id="v1.1datasources">
        <title>Data sources</title>
        <para>
            A data source object defines the location of input or output for
            MapReduce jobs and might reference different types of storage.
        </para>
        <para>
            The Data Processing service does not validate data source
            locations.
        </para>
         <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/data-sources.wadl#data-sources">
                <wadl:method href="#dataSourcesList"/>
                <wadl:method href="#dataSourcesCreate"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/data-sources.wadl#dataSourceId">
                <wadl:method href="#dataSourceInfo"/>
                <wadl:method href="#dataSourceDelete"/>
                <wadl:method href="#dataSourceUpdate"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <section xml:id="v1.1jobbinary-internals">
        <title>Job binary internals</title>
        <para>
            Job binary internal objects represent data processing applications
            and libraries that are stored in the internal database.
        </para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/job-binary-internals.wadl#job-binary-internals">
                <wadl:method href="#job-binary-internals-list"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/job-binary-internals.wadl#job-binary-internals-name-create">
                <wadl:method href="#job-binary-internals-create"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/job-binary-internals.wadl#job-binary-internals-id">
                <wadl:method href="#job-binary-internals-show"/>
                <wadl:method href="#job-binary-internals-delete"/>
                <wadl:method href="#job-binary-internals-update"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/job-binary-internals.wadl#job-binary-internals-id-data">
                <wadl:method href="#job-binary-internals-data"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <section xml:id="v1.1jobbinaries">
        <title>Job binaries</title>
        <para>
            Job binary objects represent data processing applications and
            libraries that are stored in either the internal database or the
            Object Storage service.
        </para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/job-binaries.wadl#job-binaries">
            <wadl:method href="#job-binaries-list"/>
                <wadl:method href="#job-binaries-create"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/job-binaries.wadl#job-binaries-id">
                <wadl:method href="#job-binaries-show"/>
                <wadl:method href="#job-binaries-delete"/>
                <wadl:method href="#job-binaries-update"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/job-binaries.wadl#job-binaries-id-data">
                <wadl:method href="#job-binaries-data"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <section xml:id="v1.1jobs">
        <title>Jobs</title>
        <para>
            A job object lists the binaries that a job needs to run. To
            run a job, you must specify data sources and job parameters.
        </para>
        <para>
            You can run a job on an existing or new transient cluster.
        </para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/jobs.wadl#jobs">
                <wadl:method href="#jobsList"/>
                <wadl:method href="#jobCreate"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/jobs.wadl#jobId">
                <wadl:method href="#jobInfo"/>
                <wadl:method href="#jobDelete"/>
                <wadl:method href="#jobUpdate"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/jobs.wadl#execute">
                <wadl:method href="#jobExecute"/>
            </wadl:resource>
        </wadl:resources>
    </section>
    <section xml:id="v1.1jobexecutions">
        <title>Job executions</title>
        <para>
            A job execution object represents a Hadoop job that runs on a
            cluster. A job execution polls the status of a running job and
            reports it to the user. Also a user can cancel a running job.
        </para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/job-executions.wadl#job-executions">
                <wadl:method href="#job-executions-list"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/job-executions.wadl#job_execution_id">
                <wadl:method href="#job-executions-show"/>
                <wadl:method href="#job-executions-delete"/>
                <wadl:method href="#job-executions-update"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/job-executions.wadl#refresh-status">
                <wadl:method href="#job-executions-refresh"/>
            </wadl:resource>
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/job-executions.wadl#cancel">
                <wadl:method href="#job-executions-cancel"/>
            </wadl:resource>
        </wadl:resources>
   </section>
   <section xml:id="v1.1jobtypes">
        <title>Job types</title>
        <para>
            Each plugin that supports EDP also supports specific job types.
            Different versions of a plugin might actually support different job
            types. Configuration options vary by plugin, version, and
            job type.
        </para>
        <para>
            The job types provide information about which plugins support
            which job types and how to configure the job types.
        </para>
        <wadl:resources xmlns:wadl="http://wadl.dev.java.net/2009/02">
            <wadl:resource href="../wadls/dataprocessing-api/src/v1.1/wadl/job-types.wadl#job-types">
                <wadl:method href="#jobTypesList"/>
            </wadl:resource>
        </wadl:resources>
   </section>
</chapter>
